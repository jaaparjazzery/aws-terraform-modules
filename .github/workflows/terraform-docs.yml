# .github/workflows/terraform-docs.yml
# Automatically generates and updates module documentation

name: Generate Terraform Docs

on:
  push:
    branches: [ main ]
    paths:
      - 'modules/**/*.tf'
  pull_request:
    paths:
      - 'modules/**/*.tf'

jobs:
  docs:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Terraform Docs
        uses: terraform-docs/gh-actions@v1.0.0
        with:
          working-dir: .
          output-file: README.md
          output-method: inject
          recursive: true
          recursive-path: modules

      - name: Commit changes
        if: github.event_name == 'push'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add modules/**/README.md
          git diff --quiet && git diff --staged --quiet || git commit -m "docs: auto-generate terraform documentation"
          git push

---

# .github/workflows/security-scan.yml
# Scans Terraform code for security issues

name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

jobs:
  tfsec:
    name: tfsec Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          soft_fail: false
          format: sarif
          additional_args: --minimum-severity MEDIUM

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: results.sarif

  checkov:
    name: Checkov Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          framework: terraform
          quiet: false
          soft_fail: false
          download_external_modules: true

  trivy:
    name: Trivy IaC Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

---

# .github/workflows/cost-estimation.yml
# Estimates infrastructure costs using Infracost

name: Cost Estimation

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/**/*.tf'
      - 'modules/**/*.tf'

jobs:
  infracost:
    name: Infracost Estimation
    runs-on: ubuntu-latest
    
    env:
      INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
    
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.pull_request.base.ref }}'

      - name: Generate base cost estimate
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Generate Infracost baseline
        run: |
          infracost breakdown --path=examples/ \
            --format=json \
            --out-file=/tmp/infracost-base.json

      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Generate PR cost estimate
        run: |
          infracost breakdown --path=examples/ \
            --format=json \
            --out-file=/tmp/infracost.json

      - name: Post Infracost comment
        run: |
          infracost comment github --path=/tmp/infracost.json \
            --repo=$GITHUB_REPOSITORY \
            --github-token=${{ secrets.GITHUB_TOKEN }} \
            --pull-request=${{ github.event.pull_request.number }} \
            --behavior=update

---
